BuChain的基本架构
===================

本章节主要讲解BuChain的基本架构以及它的一些技术特性。

BuChain的基本架构
-----------------

BU区块链架构的发展主要经历了两个阶段，第一个阶段是专注于联盟链场景，我们实现了区块链的基本架构，专注于加密技术，提供了丰富的SDK用于开发。
第二个阶段是专注于公链场景，我们基于多年以来在联盟链场景积累的优势，改进共识、增加智能合约，让全民参与到链的建设，实现了BuChain的最新版本。

这是BuChain的架构图，它是基于账户结构的区块链，最底层由账本、共识以及P2P网络组成，账本结构包含几个主要部分：账户、交易、资产以及区块。第一个是账户，账户保存用户资产余额以及其他附属信息，
并且它可以由多个账号控制，由多个账号控制的账户我们称之为联名账户；第二个是交易，单笔交易可以包含多笔操作，多笔操作的源地址可以不相同，而且多笔操作的执行结果是原子性的，全部成功或者全部失败；
在BU区块链体系内，存在着两个类型的资产，第一个是BU Coin，可用于支付交易手续费以及区块奖励，第二个是资产Asset，用户可以简单地调用API即可快速发行自定义资产。在加密算法方面，
除了支持高效快速的椭圆曲线加密算法ED25519，也支持国家商用密码标准SM2。

我们基于Google Chrome 的 JavaScript 解释器V8，开发了BuChain的智能合约虚拟机BuVM，因为V8高效且经过长时间验证。考虑到支持更多的开发语言，让更多的开发者基于BuChain开发，我们将集成WASM虚拟机到BuVM之中。
同时，我们提供智能合约IDE环境，帮助开发者快速开发及调试智能合约代码；针对一些通用的应用场景，BuChain提供了智能合约开发模板。

BuChain API 分为两种协议：易于开发的HTTP协议，以及高效的Websocket协议，基于Websocket协议，开发者可以及时接收订阅后的新区块和交易信息。
关于BuChain的应用方面，我们开发了各种平台下的GUI钱包、区块链浏览器、监控平台以及加密组件等。

BuChain的技术特性
-----------------

关于BuChain技术特点或者说技术优势，我将从对开发者友好、资产自由流通以及高吞吐率这三点讲解。


开发者友好
^^^^^^^^^^

让开发者能够快速准确地开发DaPP，我们从几个方面着手：
SDK支持多种开发语言包括JAVA、NODEJS、GO，其他语言版本也在陆续地由社区成员贡献代码。
智能合约开发语言第一期我们支持JavaScript，没有去自创语言，降低了用户学习成本，后期通过WASM支持其他语言写智能合约。
我们编写大量的智能合约模板，开发者拿过来后更改几个参数即可创建安全完整的智能合约。
我们开发了合约IDE，集开发、调试、部署于一体，开发者利用该IDE在几分钟内就可部署一套DaPP。
另外，我们原生支持联名账户创建以及批量转账，开发者不需要写复杂的智能合约就可使用一些常用功能。


资产自由流通
^^^^^^^^^^^^

让数字资产自由流通，从流通的领域分为三个层次:
第一层是单链内的流通，开发者自由发行数字资产，数字资产也能自由流通；对于数字资产的交换不依赖于中心化的交易所，在链上就可以完成交易。
第二层是在多链体系内，资产可以从主链转移到子链，也可以从子链再转移到另一个子链，这种特性将由BuChain的Oribt技术支持。
第三层是指资产可以跨异构链进行资产的转移，这种特性将由BuChain的Canal技术支持。

高吞吐率
^^^^^^^^^

目前全球公链没有得到广泛的应用，其公认的缺陷是性能问题。BuChain通过以下几个方面提高性能：

第一，优化单链关键算法的性能。比如，更改加密算法，把ECSDA更改为ED25519，提高验签速度；然后选择高效的引擎作为智能合约虚拟机。
数据存储方面把单机存储改为分布式存储，这样既提高存储效率，也增加了数据存储容量。
共识算法方面，在BFT算法的基础上，引入DPOS的机制，满足高吞吐率和社区激励的需求。

第二，单链的性能总是有极限的，在架构层面，我们将推出Orbits同构多链体系，该体系由多条链组成，每条链有不同的技术特征形态，既能支撑不同类型的业务，也能通过增加资源，提高交易速度。

